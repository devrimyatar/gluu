# coding: utf-8

"""
    jans-config-api

    jans-config-api - Authorization services  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: xxx@gluu.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Jansconfigapiapiv1openidclientsClientAttributes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'tls_client_auth_subject_dn': 'str',
        'run_introspection_script_before_access_token_as_jwt_creation_and_include_claims': 'bool',
        'keep_client_authorization_after_expiration': 'bool'
    }

    attribute_map = {
        'tls_client_auth_subject_dn': 'tlsClientAuthSubjectDn',
        'run_introspection_script_before_access_token_as_jwt_creation_and_include_claims': 'runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims',
        'keep_client_authorization_after_expiration': 'keepClientAuthorizationAfterExpiration'
    }

    def __init__(self, tls_client_auth_subject_dn=None, run_introspection_script_before_access_token_as_jwt_creation_and_include_claims=None, keep_client_authorization_after_expiration=None):  # noqa: E501
        """Jansconfigapiapiv1openidclientsClientAttributes - a model defined in Swagger"""  # noqa: E501
        self._tls_client_auth_subject_dn = None
        self._run_introspection_script_before_access_token_as_jwt_creation_and_include_claims = None
        self._keep_client_authorization_after_expiration = None
        self.discriminator = None
        if tls_client_auth_subject_dn is not None:
            self.tls_client_auth_subject_dn = tls_client_auth_subject_dn
        if run_introspection_script_before_access_token_as_jwt_creation_and_include_claims is not None:
            self.run_introspection_script_before_access_token_as_jwt_creation_and_include_claims = run_introspection_script_before_access_token_as_jwt_creation_and_include_claims
        if keep_client_authorization_after_expiration is not None:
            self.keep_client_authorization_after_expiration = keep_client_authorization_after_expiration

    @property
    def tls_client_auth_subject_dn(self):
        """Gets the tls_client_auth_subject_dn of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501


        :return: The tls_client_auth_subject_dn of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501
        :rtype: str
        """
        return self._tls_client_auth_subject_dn

    @tls_client_auth_subject_dn.setter
    def tls_client_auth_subject_dn(self, tls_client_auth_subject_dn):
        """Sets the tls_client_auth_subject_dn of this Jansconfigapiapiv1openidclientsClientAttributes.


        :param tls_client_auth_subject_dn: The tls_client_auth_subject_dn of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501
        :type: str
        """

        self._tls_client_auth_subject_dn = tls_client_auth_subject_dn

    @property
    def run_introspection_script_before_access_token_as_jwt_creation_and_include_claims(self):
        """Gets the run_introspection_script_before_access_token_as_jwt_creation_and_include_claims of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501

        Run Introspection Script Before Access Token as Jwt Creation and Include Claims. Default value is false.  # noqa: E501

        :return: The run_introspection_script_before_access_token_as_jwt_creation_and_include_claims of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501
        :rtype: bool
        """
        return self._run_introspection_script_before_access_token_as_jwt_creation_and_include_claims

    @run_introspection_script_before_access_token_as_jwt_creation_and_include_claims.setter
    def run_introspection_script_before_access_token_as_jwt_creation_and_include_claims(self, run_introspection_script_before_access_token_as_jwt_creation_and_include_claims):
        """Sets the run_introspection_script_before_access_token_as_jwt_creation_and_include_claims of this Jansconfigapiapiv1openidclientsClientAttributes.

        Run Introspection Script Before Access Token as Jwt Creation and Include Claims. Default value is false.  # noqa: E501

        :param run_introspection_script_before_access_token_as_jwt_creation_and_include_claims: The run_introspection_script_before_access_token_as_jwt_creation_and_include_claims of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501
        :type: bool
        """

        self._run_introspection_script_before_access_token_as_jwt_creation_and_include_claims = run_introspection_script_before_access_token_as_jwt_creation_and_include_claims

    @property
    def keep_client_authorization_after_expiration(self):
        """Gets the keep_client_authorization_after_expiration of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501

        Keep Client Authorization After Expiration.  # noqa: E501

        :return: The keep_client_authorization_after_expiration of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501
        :rtype: bool
        """
        return self._keep_client_authorization_after_expiration

    @keep_client_authorization_after_expiration.setter
    def keep_client_authorization_after_expiration(self, keep_client_authorization_after_expiration):
        """Sets the keep_client_authorization_after_expiration of this Jansconfigapiapiv1openidclientsClientAttributes.

        Keep Client Authorization After Expiration.  # noqa: E501

        :param keep_client_authorization_after_expiration: The keep_client_authorization_after_expiration of this Jansconfigapiapiv1openidclientsClientAttributes.  # noqa: E501
        :type: bool
        """

        self._keep_client_authorization_after_expiration = keep_client_authorization_after_expiration

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Jansconfigapiapiv1openidclientsClientAttributes, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Jansconfigapiapiv1openidclientsClientAttributes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
